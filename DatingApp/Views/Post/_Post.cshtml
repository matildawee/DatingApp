@model DatingApp.Models.PostUserViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Posts";
}

@if (SignInManager.IsSignedIn(User))
{
    <h1>Posts</h1>
    <div id="PostWall">
        <div class="card border border-danger bg-light mb-3" id="CreatePostCard">
            <div class="card-header">
                <h4><span class="card-title">Create Post</span></h4>
            </div>
            <div class="card-body">
                <textarea class="form-control card-text" id="PostText" placeholder="What's on your mind?"></textarea>
            </div>
            <footer class="card-footer">
                <p class="float-left card-text">Characters Remaining: <span class="badge badge-pill badge-success" id="TextAreaWordCounter">300</span></p>
                <button class="btn btn-primary float-right" id="SubmitPost">Submit Post</button>
                <p id="TEST">TEST</p>

            </footer>
        </div>
    </div>

    <h1>@Model.PersonId</h1>

    foreach (var item in Model.Posts)
    {
        <h3>Author: @item.Author.FirstName @item.Author.LastName</h3>
        <h3>Date: @item.Timestamp</h3>

        <h3>@item.PostText</h3>
    }

}

else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}